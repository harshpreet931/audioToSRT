name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './audio-to-srt-app/package-lock.json'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Setup Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './audio-to-srt-app/src-tauri -> target'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            ffmpeg

      - name: Install macOS Dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew install ffmpeg

      - name: Install Windows Dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          # Install FFmpeg for Windows
          $ffmpegUrl = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip"
          $ffmpegZip = "$env:TEMP\ffmpeg.zip"
          $ffmpegDir = "$env:TEMP\ffmpeg"
          Invoke-WebRequest -Uri $ffmpegUrl -OutFile $ffmpegZip
          Expand-Archive -Path $ffmpegZip -DestinationPath $ffmpegDir -Force
          $ffmpegBin = Get-ChildItem -Path $ffmpegDir -Filter "ffmpeg.exe" -Recurse | Select-Object -First 1
          $env:PATH += ";$($ffmpegBin.Directory.FullName)"
          echo "$($ffmpegBin.Directory.FullName)" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Frontend Dependencies
        run: |
          cd audio-to-srt-app
          npm ci

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './audio-to-srt-app'
          tagName: ${{ github.ref_name }}
          releaseName: "Audio to SRT ${{ github.ref_name }}"
          releaseBody: |
            ## Audio to SRT ${{ github.ref_name }}
            
            Convert audio files to SRT subtitles with AI-powered transcription.
            
            ### Downloads
            - **macOS**: Download the `.dmg` file
            - **Windows**: Download the `.msi` installer  
            - **Linux**: Download the `.AppImage` or `.deb` package
            
            ### What's New
            - Bug fixes and improvements
            - Performance optimizations
            - Enhanced compatibility
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}